import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { cookies } from "next/headers";
import { ActiveThemeProvider } from "@/components/active-theme";
import { cn } from "@/lib/utils"
import { ThemeProvider } from "next-themes";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const cookieStore = await cookies()
const activeThemeValue = cookieStore.get("active_theme")?.value
const isScaled = activeThemeValue?.endsWith("-scaled")

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
     className={cn(
      "bg-background overscroll-none font-sans antialiased",
      activeThemeValue ? `theme-${activeThemeValue}` : "",
      isScaled ? "theme-scaled" : "",
    )}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem  
          disableTransitionOnChange
          enableColorScheme
        >
        <ActiveThemeProvider initialTheme={activeThemeValue}>
          {children}
        </ActiveThemeProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
